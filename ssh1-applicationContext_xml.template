<?xml version="1.0" encoding="UTF-8"?>
<!-- @Created with Atom -->
<!-- @author @author@ -->
<!-- @time @timestamp@ -->
<!-- @description -->
<!-- classpath:ssh1/ssh1-applicationContext.xml -->


<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!-- 开启包扫描，并注册注解 -->
  <context:component-scan base-package="controller" />
  <!-- 引入属性文件 -->
  <context:property-placeholder location="classpath:jdbc.properties" />

  <!-- dbcp连接池 -->
  <!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
  <!-- druid连接池 -->
  <!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">  -->
  <!-- <property name="driverClassName" value="${jdbc.driver}" /> -->
  <!-- <property name="url" value="${jdbc.url}" /> -->
  <!-- <property name="username" value="${jdbc.username}" /> -->
  <!-- <property name="password" value="${jdbc.password}" /> -->
  <!-- c3p0连接池 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="driverClass" value="${jdbc.driver}" />
    <property name="jdbcUrl" value="${jdbc.url}" />
    <property name="user" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- 初始化连接大小 -->
    <!-- <property name="initialSize" value="${initialSize}" /> -->
    <!-- 连接池最大数量 -->
    <!-- <property name="maxActive" value="${maxActive}" /> -->
    <!-- 连接池最大空闲 -->
    <!-- <property name="maxIdle" value="${maxIdle}" /> -->
    <!-- 连接池最小空闲 -->
    <!-- <property name="minIdle" value="${minIdle}" /> -->
    <!-- 获取连接最大等待时间 -->
    <!-- <property name="maxWait" value="${maxWait}" /> -->
  </bean>

  <!-- 配置Hibernate的SessionFactory -->
  <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <!-- 注入连接池 -->
    <property name="dataSource" ref="dataSource" />
    <!-- 配置Hibernate属性 -->
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.show_sql">true</prop><!-- 是否展示SQL -->
        <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 是否自动创建表结构 -->
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
      </props>
    </property>
    <!-- 扫描并加载注解过的实体类 -->
    <property name="packagesToScan" value="entity" />
  </bean>

  <!-- 配置事务管理器 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <!-- 注入SessionFactory -->
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- 配置事务增强 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <!-- 配置需要进行事务管理的方法，和事务传播行为 -->
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="create*" propagation="REQUIRED" />
      <tx:method name="delete*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
      <tx:method name="query*" propagation="SUPPORTS" read-only="true" />
    </tx:attributes>
  </tx:advice>

  <!-- 配置切面 -->
  <aop:config>
    <!-- 配置切入点 *.service.*+.*(..)
            * org.ssh.service.*+.*(..)
                *：表示方法的作用域，*表示所有
                org.ssh.service.*：表示org.ssh.service下的任何包
                org.ssh.service.*+：表示org.ssh.service下的任何包及其子包
                *(..)：*表示任何方法，(..)表示方法的任何参数
         -->
    <aop:pointcut id="pointcut" expression="execution(* service.*+.*(..))" />
    <!-- 适配切入点和事务增强 -->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
  </aop:config>
</beans>