package com.sd.common.util;



/**
 * @author @author@
 * @Created with Atom
 * @time @now@
 * @description Page分页工具类
 **/

public class PageUtil {
  private int totalItems; //总数
  private int pageSize = 10; //每页显示数量
  private int currentPage; //当前页
  private int totalPages; //总页数
  private int prePage; //上一页
  private int nextPage; //下一页
  private boolean hasPrePage; //是否有上一页
  private boolean hasNextPage; //是否有下一页
  private int firstPage; //第一页
  private int lastPage; //最后一页
  private int currentItem; //当前从第多少条数据开始显示

  public PageUtil() {}

  public PageUtil(int totalItems, int currentPage) {
    this.totalItems = totalItems;
    this.currentPage = currentPage;
    this.totalPages = (int) Math.ceil(1.0 * totalItems / pageSize);
    this.currentItem = (totalPages - 1) * pageSize;
    if (currentPage > 1) { //判断是不是第一页
      /*--不是第一页 则有上一页 ，也有第一页--*/
      hasPrePage = true;
      prePage = currentPage - 1;
      firstPage = 1;
    }
    if (currentPage < totalPages) { //判断是不是最后一页
      /*--不是最后一页 则有上一页 ，也有最后一页--*/
      hasNextPage = true;
      nextPage = currentPage + 1;
      lastPage = totalPages;
    }
  }

  public int getTotalItems() {
    return (totalItems);
  }

  public void setTotalItems(int totalItems) {
    this.totalPages = (int) Math.ceil(1.0 * totalItems / pageSize);
    if (this.currentPage < 1) {
      this.currentPage = 1;
    }
    this.currentItem = (currentPage - 1) * pageSize;
    if (currentPage > 1) { //判断是不是第一页
      /*--不是第一页 则有上一页 ，也有第一页--*/
      hasPrePage = true;
      prePage = currentPage - 1;
      firstPage = 1;
    }
    if (currentPage < totalPages) { //判断是不是最后一页
      /*--不是最后一页 则有上一页 ，也有最后一页--*/
      hasNextPage = true;
      nextPage = currentPage + 1;
      lastPage = totalPages;
    }
    this.totalItems = totalItems;
  }

  public int getPageSize() {
    return (pageSize);
  }

  public void setPageSize(int pageSize) {
    this.pageSize = pageSize;
  }

  public int getPrePage() {
    return (prePage);
  }

  public void setPrePage(int prePage) {
    this.prePage = prePage;
  }

  public int getNextPage() {
    return (nextPage);
  }

  public void setNextPage(int nextPage) {
    this.nextPage = nextPage;
  }

  public boolean hasPrePage() {
    return (hasPrePage);
  }

  public void setHasPrePage(boolean hasPrePage) {
    this.hasPrePage = hasPrePage;
  }

  public boolean hasNextPage() {
    return (hasNextPage);
  }

  public void setHasNextPage(boolean hasNextPage) {
    this.hasNextPage = hasNextPage;
  }

  public int getFirstPage() {
    return (firstPage);
  }

  public void setFirstPage(int firstPage) {
    this.firstPage = firstPage;
  }

  public int getLastPage() {
    return (lastPage);
  }

  public void setLastPage(int lastPage) {
    this.lastPage = lastPage;
  }

  public int getcurrentPage() {
    return (currentPage);
  }

  public void setcurrentPage(int currentPage) {
    this.currentPage = currentPage;
  }

  public int getTotalPages() {
    return (totalPages);
  }

  public void setTotalPages(int totalPages) {
    this.totalPages = totalPages;
  }

  public int getCurrentItem() {
    return (currentItem);
  }

  public void setCurrentItem(int currentItem) {
    this.currentItem = currentItem;
  }
}